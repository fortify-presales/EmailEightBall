<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.microfocus</groupId>
	<artifactId>SpringEightBall</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>SpringEightBall</name>
	<description>Spring version of Fortify EightBall app</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<fod.dir>fod</fod.dir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>fortify</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
			</properties>
			<build>
				<plugins>
					<!-- Download and copy all dependencies on "verify" phase for Fortify On Demand -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.1.1</version>
						<executions>
							<execution>
								<id>download-sources</id>
								<phase>package</phase>
								<goals>
									<goal>sources</goal>
								</goals>
								<configuration>
									<overWriteIfNewer>true</overWriteIfNewer>
									<excludeGroupIds>
										junit,org.easymock,${project.groupId}
									</excludeGroupIds>
									<!-- uncomment to only include direct dependencies -->
									<excludeTransitive>false</excludeTransitive>
								</configuration>
							</execution>
							<execution>
								<id>copy-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>target/classes/lib</outputDirectory>
									<!--classifier>sources</classifier-->
									<overWriteIfNewer>true</overWriteIfNewer>
									<excludeGroupIds>
										junit,org.easymock,${project.groupId}
									</excludeGroupIds>
									<!-- uncomment to only include direct dependencies -->
									<excludeTransitive>false</excludeTransitive>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<verbose>true</verbose>
							<detail>true</detail>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>
					</plugin>
					<!-- Create a source bundle (.jar) for Fortify on Demand
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin-->
					<!-- Copy minimal set of files to FOD upload directory -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>copy-fortify-resources</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/${fod.dir}</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/</directory>
											<includes>
												<include>src/**/*</include>
												<include>pom.xml</include>
												<include>Dockerfile*</include>
											</includes>
											<excludes>
												<!-- exclude test source code -->
												<exclude>src/test/**/*</exclude>
											</excludes>
										</resource>
										<!-- include third party dependencies -->
										<resource>
											<directory>${basedir}/target/classes/lib</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>build-info</id>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<profiles>
						<profile>prod</profile>
					</profiles>
				</configuration>
			</plugin>

			<!-- Cleanup FOD upload directory -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>${fod.dir}</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
